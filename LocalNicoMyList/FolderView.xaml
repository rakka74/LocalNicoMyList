<UserControl x:Class="LocalNicoMyList.FolderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LocalNicoMyList"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border"
                            BorderThickness="1"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding  Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- 選択:○、マウスオーバー:○ -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cce8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#99d1ff"/>
                </MultiDataTrigger>
                <!-- 選択:○、マウスオーバー:× -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- 選択:○、フォーカス:×、コンテキストメニュー:× -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=ListView}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#d9d9d9"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#d9d9d9"/>
                </MultiDataTrigger>
                <!-- 選択:○、フォーカス:×、コンテキストメニュー（アイテム）:○ ... コンテキストメニューを表示するとフォーカスがなくなって色がアンフォーカス時の色に変わるのを抑制 -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- 選択:○、フォーカス:×、コンテキストメニュー（アイテムがない場所）:○ ... コンテキストメニューを表示するとフォーカスがなくなって色がアンフォーカス時の色に変わるのを抑制 -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource AncestorType=ListView}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- 選択:× -->
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <!-- 選択:×、マウスオーバー:○ -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#e5f3ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#e5f3ff"/>
                </MultiDataTrigger>
                <!-- コンテキストメニュー表示時、クリックされたアイテム -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataContext.showedContextMenu, RelativeSource={RelativeSource Self}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- コンテキストメニューで削除が選択されるとメッセージボックスが表示されるが、コンテキストメニューが消えてshowdContextMenuがfalseになって
                        削除対象のフォルダの背景色がなくなって違和感があったので -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataContext.isContextMenuCommandTarget, RelativeSource={RelativeSource Self}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- MyListItemのドロップターゲットのアイテム -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataContext.isMyListItemDropTarget, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="FolderListDataTemplate">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding name}" FontSize="12" />
                    <TextBlock FontSize="12" Margin="10,0,0,0" VerticalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="[{0}]">
                                <Binding Path="count" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
                <TextBox x:Name="textBox" FontSize="12" Visibility="Collapsed" LostFocus="folderListTextBox_LostFocus" KeyDown="folderListTextBox_KeyDown" />
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid x:Name="rootGrid">
        <ListView Grid.Column="0" x:Name="_folderListView" ItemsSource="{Binding folderLVItemsSource}" ItemTemplate="{DynamicResource FolderListDataTemplate}" SelectionChanged="_folderListView_SelectionChanged" SelectionMode="Single"
                        MouseLeftButtonDown="folderListView_MouseLeftButtonDown" MouseRightButtonDown="folderListView_MouseRightButtonDown"
                        PreviewMouseRightButtonDown="folderListView_PreviewMouseRightButtonDown"
                        DragEnter="folderListView_DragEnter"
                        DragOver="folderListView_DragOver"
                        DragLeave="folderListView_DragLeave"
                        Drop="folderListView_Drop"
                        AllowDrop="True"
                  >
            <i:Interaction.Behaviors>
                <local:FolderItemDragDropBehavior IsDragEnabled="{Binding Path=isFolderItemDragEnabled, Mode=TwoWay}"/>
            </i:Interaction.Behaviors>
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" Closed="ContextMenu_Closed">
                    <MenuItem Header="追加" Click="addFolder_Click" />
                    <MenuItem Header="削除" Click="removeFolder_Click" />
                    <MenuItem Header="名前の変更" Click="renameFolder_Click" />
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="追加" Click="addFolder_Click" />
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>
    </Grid>
</UserControl>
