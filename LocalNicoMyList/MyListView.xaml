<UserControl x:Class="LocalNicoMyList.MyListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:LocalNicoMyList"
             xmlns:ddlv="clr-namespace:DragDropListView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border"
                            BorderThickness="1"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding  Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- 選択:○、マウスオーバー:○ -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cce8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#99d1ff"/>
                </MultiDataTrigger>
                <!-- 選択:○、マウスオーバー:× -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- 選択:○、フォーカス:×、コンテキストメニュー:× -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=ListView}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#d9d9d9"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#d9d9d9"/>
                </MultiDataTrigger>
                <!-- 選択:○、フォーカス:×、コンテキストメニュー（アイテム）:○ ... コンテキストメニューを表示するとフォーカスがなくなって色がアンフォーカス時の色に変わるのを抑制 -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- 選択:○、フォーカス:×、コンテキストメニュー（アイテムがない場所）:○ ... コンテキストメニューを表示するとフォーカスがなくなって色がアンフォーカス時の色に変わるのを抑制 -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource AncestorType=ListView}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#cde8ff"/>
                </MultiDataTrigger>
                <!-- 選択:× -->
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <!-- 選択:×、マウスオーバー:○ -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#e5f3ff"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#e5f3ff"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="VideoListDataTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,5">
                <Grid Width="100" Height="76" Background="Black">
                    <Image Source="{Binding thumbnailUrl}" Width="96" Height="72" Stretch="UniformToFill" />
                    <TextBlock Text="{Binding lengthText}" FontSize="11" FontWeight="Bold" Padding="3,1" Background="Black"  Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                </Grid>
                <StackPanel Orientation="Vertical" Margin="10,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding firstRetrieve, StringFormat=yyyy年MM月dd日\ hh時mm分}" FontSize="12" FontWeight="Bold" />
                        <TextBlock Text="投稿" FontSize="12" Margin="5,0,0,0"/>
                    </StackPanel>
                    <TextBlock Text="{Binding title}" FontSize="16" FontWeight="Bold" />
                    <!--<WebBrowser Height="50" local:BrowserBehavior.Html="{Binding HtmlToDisplay}" />-->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="再生：" FontSize="12" />
                        <TextBlock Text="{Binding viewCounter, StringFormat={}{0:#\,0}}" FontSize="12" FontWeight="Bold"/>
                        <TextBlock Text="コメ：" FontSize="12"  Margin="15,0,0,0"/>
                        <TextBlock Text="{Binding commentNum, StringFormat={}{0:#\,0}}" FontSize="12" FontWeight="Bold"/>
                        <TextBlock Text="マイ：" FontSize="12" Margin="15,0,0,0" />
                        <TextBlock Text="{Binding mylistCounter, StringFormat={}{0:#\,0}}" FontSize="12" FontWeight="Bold"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="getflv：" FontSize="10" Foreground="Gray"/>
                        <TextBlock Text="{Binding getflv}" FontSize="10" Foreground="Gray"/>
                        <TextBlock Text="最新コメ：" FontSize="10" Foreground="Gray" Margin="15,0,0,0" />
                        <TextBlock Text="{Binding latestCommentTime, StringFormat=yyyy年MM月dd日\ hh時mm分}" FontSize="10" Foreground="Gray" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="sortCB" Grid.Column="0" Width="200" HorizontalAlignment="Left" Margin="10,5,0,5"
                          ItemsSource="{Binding}" DisplayMemberPath="name" SelectedValuePath="id" SelectionChanged="sortCB_SelectionChanged" DropDownClosed="sortCB_DropDownClosed" />
            <Button Grid.Column="1" Margin="10,5,0,5" Padding="20,0" Click="refreshButton_Click">更新</Button>
            <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center">
                <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0">
                    <TextBox Text="{Binding Path=titleFilterText, UpdateSourceTrigger=PropertyChanged}" Width="150" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,20,0" TextChanged="titleFilter_TextChanged"/>
                    <Image Source="Resources/Images/filter.png" Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Center" Width="12" Height="12" Margin="0,0,5,0" Visibility="{Binding filterOnVisibility}"/>
                    <Image Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Center" Width="10" Height="10" Margin="0,0,6,0" Visibility="{Binding filterOffVisibility}" MouseLeftButtonDown="filterOff_MouseLeftButtonDown">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Images/filter_off_normal.png"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/Images/filter_off_mouseover.png"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
            </StackPanel>
        </Grid>
        <!-- マイリスト一覧 -->
        <ListView Grid.Row="1" x:Name="_videoListView" ItemsSource="{Binding myListItemCVS.View}" ItemTemplate="{DynamicResource VideoListDataTemplate}" AllowDrop="True"
                        VirtualizingPanel.ScrollUnit="Pixel" MouseDown="videoListView_MouseDown">
            <i:Interaction.Behaviors>
                <ddlv:AcceptDrop Specifications="{Binding dropSpecifications}" />
                <local:MyListItemDragBehavior />
            </i:Interaction.Behaviors>
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="削除" Click="removeMyList_Click" />
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <EventSetter Event="MouseDoubleClick" Handler="MyListListViewItem_MouseDoubleClick" />
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
